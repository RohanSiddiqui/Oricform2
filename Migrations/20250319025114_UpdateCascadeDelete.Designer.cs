// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Oricform2.Data;

#nullable disable

namespace Oricform2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250319025114_UpdateCascadeDelete")]
    partial class UpdateCascadeDelete
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Oricform2.Models.AgreementSigned", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("duration")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("evidence")
                        .HasColumnType("text");

                    b.Property<string>("field")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("financialsupport")
                        .HasColumnType("text");

                    b.Property<string>("hostinstitutionnameandaddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("keyinitiatives")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("linkageestablishmentdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("nationalorinternational")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ric_form_2_id")
                        .HasColumnType("integer");

                    b.Property<string>("scopeofcollaboration")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("typeoflinkage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("ric_form_2_id");

                    b.ToTable("AgreementsSigned");
                });

            modelBuilder.Entity("Oricform2.Models.ConferenceArranged", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("audiencetype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("eventdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("eventlevel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("eventtype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("evidence")
                        .HasColumnType("text");

                    b.Property<string>("focusandoutcomes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("numberofparticipants")
                        .HasColumnType("integer");

                    b.Property<string>("organizer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ric_form_2_id")
                        .HasColumnType("integer");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("ric_form_2_id");

                    b.ToTable("ConferencesArranged");
                });

            modelBuilder.Entity("Oricform2.Models.ExclusiveOrNonExclusive", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("dateanddurationofagreement")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("developmentstatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("evidence")
                        .HasColumnType("text");

                    b.Property<string>("fieldofuse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("inventiontitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ipcategory")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("keyscientificaspects")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("leadinventordepartment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("leadinventordesignation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("leadinventorname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("licensedetails")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("licenseregion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("licensetype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ric_form_2_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("ric_form_2_id");

                    b.ToTable("ExclusiveOrNonExclusives");
                });

            modelBuilder.Entity("Oricform2.Models.ExhibitionEvent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("audiencetype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("eventdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("eventlevel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("eventtype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("evidence")
                        .HasColumnType("text");

                    b.Property<string>("focusandoutcomes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("numberofparticipants")
                        .HasColumnType("integer");

                    b.Property<int>("ric_form_2_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("ric_form_2_id");

                    b.ToTable("ExhibitionEvents");
                });

            modelBuilder.Entity("Oricform2.Models.HonorOrAward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("awardreceived")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("awardwinnerdetails")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("evidence")
                        .HasColumnType("text");

                    b.Property<string>("forumororganization")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("prizemoney")
                        .HasColumnType("numeric");

                    b.Property<string>("remarks")
                        .HasColumnType("text");

                    b.Property<int>("ric_form_2_id")
                        .HasColumnType("integer");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("workdetails")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ric_form_2_id");

                    b.ToTable("HonorsAwards");
                });

            modelBuilder.Entity("Oricform2.Models.IPDisclosure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("commercialpartner")
                        .HasColumnType("text");

                    b.Property<string>("developmentstatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("disclosuremadedate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("disclosuremadewith")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("evidence")
                        .HasColumnType("text");

                    b.Property<string>("financialsupport")
                        .HasColumnType("text");

                    b.Property<string>("inventiontitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ipcategory")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("keyscientificaspects")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("leadinventordepartment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("leadinventordesignation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("leadinventorname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("previousdisclosure")
                        .HasColumnType("text");

                    b.Property<int>("ric_form_2_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ric_form_2_id");

                    b.ToTable("IPDisclosures");
                });

            modelBuilder.Entity("Oricform2.Models.IPLicensingNegotiation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("development_status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("duration_of_agreement")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("evidence")
                        .HasColumnType("text");

                    b.Property<string>("field_of_use")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("invention_title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ip_category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("key_scientific_aspects")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lead_inventor_department")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lead_inventor_designation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lead_inventor_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("license_details")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("licensing_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ric_form_2_id")
                        .HasColumnType("integer");

                    b.Property<string>("status_of_negotiation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ric_form_2_id");

                    b.ToTable("IPLicensingNegotiations");
                });

            modelBuilder.Entity("Oricform2.Models.OricForm2", b =>
                {
                    b.Property<int>("ric_form_2_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ric_form_2_id"));

                    b.Property<int?>("collaborationagreementscount")
                        .HasColumnType("integer");

                    b.Property<string>("departmentname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("externaltrainingscount")
                        .HasColumnType("integer");

                    b.Property<string>("facultyemail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("facultymembername")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("honorsawardscount")
                        .HasColumnType("integer");

                    b.Property<int?>("industryvisitscount")
                        .HasColumnType("integer");

                    b.Property<int?>("ipdisclosurescount")
                        .HasColumnType("integer");

                    b.Property<int?>("licensessignedcount")
                        .HasColumnType("integer");

                    b.Property<int?>("licensingnegotiationscount")
                        .HasColumnType("integer");

                    b.Property<int?>("orictrainingscount")
                        .HasColumnType("integer");

                    b.Property<int?>("patentsfiledcount")
                        .HasColumnType("integer");

                    b.Property<int?>("patentsgrantedcount")
                        .HasColumnType("integer");

                    b.Property<int?>("productsdevelopedcount")
                        .HasColumnType("integer");

                    b.Property<int?>("productsdisplayedcount")
                        .HasColumnType("integer");

                    b.Property<int?>("researchpublicationscount")
                        .HasColumnType("integer");

                    b.HasKey("ric_form_2_id");

                    b.ToTable("OricForms");
                });

            modelBuilder.Entity("Oricform2.Models.Patent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("commercialpartner")
                        .HasColumnType("text");

                    b.Property<DateTime>("dateoffiling")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("developmentstatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("filedorgranted")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("filingevidence")
                        .HasColumnType("text");

                    b.Property<string>("financialsupport")
                        .HasColumnType("text");

                    b.Property<string>("grantingevidence")
                        .HasColumnType("text");

                    b.Property<string>("inventiontitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ipcategory")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("keyscientificaspects")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("leadinventordepartment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("leadinventordesignation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("leadinventorname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nationalorinternational")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("patentfiledwith")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("patentgrantingauthority")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ric_form_2_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ric_form_2_id");

                    b.ToTable("Patents");
                });

            modelBuilder.Entity("Oricform2.Models.ResearchProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("collaboratingindustrialpartner")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("developmentstatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("evidence")
                        .HasColumnType("text");

                    b.Property<string>("fieldofuse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("financialsupport")
                        .HasColumnType("text");

                    b.Property<string>("inventiontitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ipcategory")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("keyscientificaspects")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("leadinventordepartment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("leadinventordesignation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("leadinventorname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("remarks")
                        .HasColumnType("text");

                    b.Property<string>("researchregion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ric_form_2_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ric_form_2_id");

                    b.ToTable("ResearchProducts");
                });

            modelBuilder.Entity("Oricform2.Models.ResearchPublication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("evidence")
                        .HasColumnType("text");

                    b.Property<string>("publicationcategory")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("publicationlink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("publicationreference")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ric_form_2_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ric_form_2_id");

                    b.ToTable("ResearchPublications");
                });

            modelBuilder.Entity("Oricform2.Models.ScienceArtsProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("displayregion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("evidence")
                        .HasColumnType("text");

                    b.Property<string>("fieldofuse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("financialsupport")
                        .HasColumnType("text");

                    b.Property<string>("forum")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("leaddepartment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("leaddesignation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("leadname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("productcategory")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ric_form_2_id")
                        .HasColumnType("integer");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ric_form_2_id");

                    b.ToTable("ScienceArtsProducts");
                });

            modelBuilder.Entity("Oricform2.Models.TrainingWorkshopSeminar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("eventdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("eventlevel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("eventtype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("evidence")
                        .HasColumnType("text");

                    b.Property<string>("focusandoutcomes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("numberofparticipants")
                        .HasColumnType("integer");

                    b.Property<int>("ric_form_2_id")
                        .HasColumnType("integer");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ric_form_2_id");

                    b.ToTable("TrainingWorkshopSeminars");
                });

            modelBuilder.Entity("Oricform2.Models.VisitRepresentative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("agenda")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("evidence")
                        .HasColumnType("text");

                    b.Property<int>("ric_form_2_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("visitdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("visitorname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ric_form_2_id");

                    b.ToTable("VisitRepresentatives");
                });

            modelBuilder.Entity("Oricform2.Models.AgreementSigned", b =>
                {
                    b.HasOne("Oricform2.Models.OricForm2", "OricForm2")
                        .WithMany("AgreementSigneds")
                        .HasForeignKey("ric_form_2_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OricForm2");
                });

            modelBuilder.Entity("Oricform2.Models.ConferenceArranged", b =>
                {
                    b.HasOne("Oricform2.Models.OricForm2", "OricForm2")
                        .WithMany("ConferenceArrangeds")
                        .HasForeignKey("ric_form_2_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OricForm2");
                });

            modelBuilder.Entity("Oricform2.Models.ExclusiveOrNonExclusive", b =>
                {
                    b.HasOne("Oricform2.Models.OricForm2", "OricForm2")
                        .WithMany("ExclusiveorNonExclusives")
                        .HasForeignKey("ric_form_2_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OricForm2");
                });

            modelBuilder.Entity("Oricform2.Models.ExhibitionEvent", b =>
                {
                    b.HasOne("Oricform2.Models.OricForm2", "OricForm2")
                        .WithMany("ExhibitionEvents")
                        .HasForeignKey("ric_form_2_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OricForm2");
                });

            modelBuilder.Entity("Oricform2.Models.HonorOrAward", b =>
                {
                    b.HasOne("Oricform2.Models.OricForm2", "OricForm2")
                        .WithMany("HonorOrAwards")
                        .HasForeignKey("ric_form_2_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OricForm2");
                });

            modelBuilder.Entity("Oricform2.Models.IPDisclosure", b =>
                {
                    b.HasOne("Oricform2.Models.OricForm2", "OricForm2")
                        .WithMany("IPDisclosures")
                        .HasForeignKey("ric_form_2_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OricForm2");
                });

            modelBuilder.Entity("Oricform2.Models.IPLicensingNegotiation", b =>
                {
                    b.HasOne("Oricform2.Models.OricForm2", "OricForm2")
                        .WithMany("IPLicensingNegotiations")
                        .HasForeignKey("ric_form_2_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OricForm2");
                });

            modelBuilder.Entity("Oricform2.Models.Patent", b =>
                {
                    b.HasOne("Oricform2.Models.OricForm2", "OricForm2")
                        .WithMany("Patents")
                        .HasForeignKey("ric_form_2_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OricForm2");
                });

            modelBuilder.Entity("Oricform2.Models.ResearchProduct", b =>
                {
                    b.HasOne("Oricform2.Models.OricForm2", "OricForm2")
                        .WithMany("ResearchProducts")
                        .HasForeignKey("ric_form_2_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OricForm2");
                });

            modelBuilder.Entity("Oricform2.Models.ResearchPublication", b =>
                {
                    b.HasOne("Oricform2.Models.OricForm2", "OricForm2")
                        .WithMany("ResearchPublications")
                        .HasForeignKey("ric_form_2_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OricForm2");
                });

            modelBuilder.Entity("Oricform2.Models.ScienceArtsProduct", b =>
                {
                    b.HasOne("Oricform2.Models.OricForm2", "OricForm2")
                        .WithMany("ScienceArtsProducts")
                        .HasForeignKey("ric_form_2_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OricForm2");
                });

            modelBuilder.Entity("Oricform2.Models.TrainingWorkshopSeminar", b =>
                {
                    b.HasOne("Oricform2.Models.OricForm2", "OricForm2")
                        .WithMany("TrainingWorkshopSeminars")
                        .HasForeignKey("ric_form_2_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OricForm2");
                });

            modelBuilder.Entity("Oricform2.Models.VisitRepresentative", b =>
                {
                    b.HasOne("Oricform2.Models.OricForm2", "OricForm2")
                        .WithMany("VisitRepresentatives")
                        .HasForeignKey("ric_form_2_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OricForm2");
                });

            modelBuilder.Entity("Oricform2.Models.OricForm2", b =>
                {
                    b.Navigation("AgreementSigneds");

                    b.Navigation("ConferenceArrangeds");

                    b.Navigation("ExclusiveorNonExclusives");

                    b.Navigation("ExhibitionEvents");

                    b.Navigation("HonorOrAwards");

                    b.Navigation("IPDisclosures");

                    b.Navigation("IPLicensingNegotiations");

                    b.Navigation("Patents");

                    b.Navigation("ResearchProducts");

                    b.Navigation("ResearchPublications");

                    b.Navigation("ScienceArtsProducts");

                    b.Navigation("TrainingWorkshopSeminars");

                    b.Navigation("VisitRepresentatives");
                });
#pragma warning restore 612, 618
        }
    }
}
